
request-1) Derslere zorunlu/seçmeli alanı eklenecek. (Exams tablosuna boolean olarak, true zorunlu demek) Default olarak hepsi seçmeli olsun (yani false) bu alan exams datatable'ında editable bir şekilde gösterilecek

request-2) Dersler için course_class alanı (default olarak boş yani null) olarak datatable'da gösterilecek. Editable. Alacağı değerler 1..8, ya da null.

request-3) Öğrenci, hoca, ve genel takvim ai_day vs kullanılarak oluşturuluyor ya, o aynen kalacak. Her takcimin altına manual_day vs alanlarını kullanarak ikinci bir takvim basılacak.

request-4) Room'dan bahseden sayfalar ve alanlar iptal. Daha sonraki bir iterasyona bırakacağız bunları. Veritabanında kalsınlar, onları silmekle uğraşma, sadece arayüzden silelim/gizleyelim.

request-5) Allowed days ve allowed start_times'ın checklist lerle editlenmesini konuşmuştuk. Yapıldı mı bilmiyorum ama onun yapılması lazım.

request-6) Derslerin altında akordiyon var ya şu anda, o kalacak ama içeriği veritabanından çekilerek oluşturulacak. Bunu oluşturmak için gereken query'yi beraber yazabiliriz. Hatta bende SQL olarak yazılmış halleri var, ama sen başka bir framework kullanıyorsun o yüzden tekrar yazmak mantıklı olabilir. Karışık değiller.

request-7) .../examsCompare/A/B gibi bir sayfa yapalım. URL şekli çok önemli değil. A ve B exam isimleri. Bu isimli sınavların çakışma ihtimallerini, ortak öğrencilerini vs html metin olarak basacağız bu sayfada. Yine query'leri beraber yazabiliriz.



Ufak problemler

bug-1) Takvimlerde search case-insensitive ve LIKE şeklinde olacak (= yerine)

bug-2) Öğrenci ekranında tepede (Student: Class: Exam Count: ) kısmı boş şu anda.

bug-3) takvimlerde saat basarken sonuna '.00' ekleyelim. 9 yerine 9.00 gibi

bug-4) takvimlerde her sütunun genişliği aynı olsun.



DONE (Yapıldıktan sonra buraya taşıyalım)


